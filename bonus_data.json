{
  "bonuses": {
    "silinmesin": {
      "title": "silinmesin",
      "content": "import tkinter as tk\nfrom tkinter import messagebox\nimport re\nimport threading\n\nclass RaporOlusturucu:\n    def __init__(self, root):\n        self.root = root\n        self.root.title(\"Rapor Oluşturucu\")\n\n        # Veri değişkenleri\n        self.isim_soyisim = \"\"\n        self.kullanici_adi = \"\"\n        self.talep_miktari = \"\"\n        self.talep_yontemi = \"\"\n        self.yatirim_miktari = \"\"\n        self.toplam_yatirim = \"\"\n        self.toplam_cekim = \"\"\n        self.toplam_cekim_adedi = \"\"\n        self.oyun_turu = \"Spor\"\n        self.oynamaya_devam = \"Etmiyor\"  # Varsayılan değer\n        self.aciklama = \"\"  # Açıklama metni\n\n        # Arayüz Elemanları\n        self.label = tk.Label(root, text=\"Rapor Oluşturucu\", font=(\"Arial\", 16))\n        self.label.grid(row=0, column=0, columnspan=4, padx=10, pady=10)\n\n        # Butonlar\n        self.calistir_buton = tk.Button(root, text=\"Çalıştır\", command=self.calistir, width=15)\n        self.calistir_buton.grid(row=1, column=0, padx=5, pady=10)\n\n        self.guncelle_buton = tk.Button(root, text=\"Raporu Güncelle\", command=self.raporu_guncelle, width=15)\n        self.guncelle_buton.grid(row=1, column=1, padx=5, pady=10)\n\n        self.kopyala_buton = tk.Button(root, text=\"Raporu Kopyala\", command=self.raporu_kopyala, width=15)\n        self.kopyala_buton.grid(row=1, column=2, padx=5, pady=10)\n\n        self.temizle_buton = tk.Button(root, text=\"Raporu Temizle\", command=self.raporu_temizle, width=15)\n        self.temizle_buton.grid(row=1, column=3, padx=5, pady=10)\n\n        # Rapor Alanı\n        self.rapor_alani = tk.Text(root, height=20, width=80)\n        self.rapor_alani.grid(row=2, column=0, columnspan=4, padx=10, pady=10)\n\n        # Oyun Türü Seçenekleri\n        self.oyun_turu_label = tk.Label(root, text=\"Oyun Türü:\")\n        self.oyun_turu_label.grid(row=3, column=0, padx=10, pady=5, sticky=\"w\")\n\n        self.oyun_turu_secenekleri = [\"Casino\", \"Canlı Casino\", \"Rulet\", \"Spor\", \"Tek Maç\", \"Karşılıklı Bahis\", \"Kurmaca Bahis\"]\n        self.oyun_turu_var = tk.StringVar(value=\"Spor\")  # Varsayılan seçenek\n        self.oyun_turu_checkbuttons = []\n\n        for i, option in enumerate(self.oyun_turu_secenekleri):\n            rb = tk.Radiobutton(root, text=option, variable=self.oyun_turu_var, value=option)\n            rb.grid(row=4, column=i, padx=2, pady=2, sticky=\"w\")\n            self.oyun_turu_checkbuttons.append(rb)\n\n        # Açıklama\n        self.aciklama_label = tk.Label(root, text=\"Açıklama:\")\n        self.aciklama_label.grid(row=5, column=0, padx=10, pady=10, sticky=\"w\")\n\n        self.aciklama_entry = tk.Entry(root, width=80)\n        self.aciklama_entry.grid(row=5, column=1, columnspan=3, padx=10, pady=10, sticky=\"w\")\n\n        # Oynamaya Devam Ediyor mu?\n        self.oynamaya_devam_label = tk.Label(root, text=\"Oynamaya Devam Ediyor mu?\")\n        self.oynamaya_devam_label.grid(row=6, column=0, padx=10, pady=10, sticky=\"w\")\n\n        self.oynamaya_devam_var = tk.StringVar(value=\"Etmiyor\")  # Varsayılan değer\n        self.oynamaya_devam_evet = tk.Radiobutton(root, text=\"Evet\", variable=self.oynamaya_devam_var, value=\"Ediyor\")\n        self.oynamaya_devam_evet.grid(row=6, column=1, padx=5, pady=5, sticky=\"w\")\n        self.oynamaya_devam_hayir = tk.Radiobutton(root, text=\"Hayır\", variable=self.oynamaya_devam_var, value=\"Etmiyor\")\n        self.oynamaya_devam_hayir.grid(row=6, column=2, padx=5, pady=5, sticky=\"w\")\n\n        # Clipboard izleme durumu\n        self.clipboard_izleme = False\n        self.birinci_kisim_tamam = False\n\n    def calistir(self):\n        if not self.clipboard_izleme:\n            self.clipboard_izleme = True\n            self.calistir_buton.config(text=\"Durdur\")\n            threading.Thread(target=self.clipboard_izle, daemon=True).start()\n        else:\n            self.clipboard_izleme = False\n            self.calistir_buton.config(text=\"Çalıştır\")\n\n    def clipboard_izle(self):\n        son_clipboard_verisi = \"\"\n        while self.clipboard_izleme:\n            try:\n                # Panoyu temizle\n                self.root.clipboard_clear()\n                # Panoya boş bir değer ekle\n                self.root.clipboard_append(\"\")\n                # Panodaki veriyi al\n                clipboard_verisi = self.root.clipboard_get()\n                if clipboard_verisi != son_clipboard_verisi:\n                    son_clipboard_verisi = clipboard_verisi\n                    self.veriyi_isle(clipboard_verisi)\n            except tk.TclError:\n                pass\n            self.root.after(1000, self.clipboard_izle)  # Her 1 saniyede bir kontrol et\n            break  # Döngüyü kır ve after ile tekrar çağır\n\n    def veriyi_isle(self, veri):\n        if not self.birinci_kisim_tamam:\n            self.birinci_kisim_isle(veri)\n        else:\n            self.ikinci_kisim_isle(veri)\n\n    def birinci_kisim_isle(self, veri):\n        # Talep Miktarı\n        talep_miktari = re.search(r\"₺([\\d,]+\\.00)\", veri)\n        if talep_miktari:\n            self.talep_miktari = \"₺\" + talep_miktari.group(1)\n\n        # Talep Yöntemi\n        yontemler = [\"Aninda_KrediKarti\", \"Aninda_Mefete\", \"Aninda_Parazula\", \"AnindaHavale\",\n            \"AnindaKrediKarti\", \"AnindaQR\", \"AtikOdemeHavale\", \"AtikOdemeOtoPapara\",\n            \"CepPay\", \"Fixturka\", \"FulgurPay\", \"FulgurPayBNBB\", \"FulgurPayBTC\",\n            \"FulgurPayETH\", \"FulgurPayFTN\", \"FulgurPayLTC\", \"FulgurPayTRX\",\n            \"FulgurPayUSDB\", \"FulgurPayUSDT\", \"FulgurPayUSDT_T\", \"HedefHavale\",\n            \"Hemen\", \"HemenMefete\", \"HemenVipPayFix\", \"MiniPayHavale\", \"MiniPayPapara\",\n            \"ScashMoneyBankTransfer\", \"ScashMoneyFast\", \"ScashMoneyFixturka\",\n            \"ScashMoneyPapara\", \"UltraPayV1AutoPapara\", \"UltraPayV1Payfix\", \"VipPapara\",\n            \"VipParola\"]\n        for yontem in yontemler:\n            if yontem in veri:\n                self.talep_yontemi = yontem\n                break\n\n        # Kullanıcı Adı\n        kullanici_adi = re.search(r\"(\\S+)\\s+₺\", veri)\n        if kullanici_adi:\n            self.kullanici_adi = kullanici_adi.group(1)\n\n        # İsim Soyisim\n        isim_soyisim = re.search(r\"(\\S+\\s+\\S+)\\s+\" + self.kullanici_adi, veri)\n        if isim_soyisim:\n            self.isim_soyisim = isim_soyisim.group(1)\n        else:\n            print(\"İsim soyisim bulunamadı!\")\n\n        if self.talep_miktari and self.talep_yontemi and self.kullanici_adi and self.isim_soyisim:\n            self.birinci_kisim_tamam = True\n\n    def ikinci_kisim_isle(self, veri):\n        # Yatırım ve toplam değerler\n        yatirim_miktari = re.findall(r\"₺([\\d,]+\\.00)\", veri)\n        if len(yatirim_miktari) >= 2:\n            self.yatirim_miktari = \"₺\" + yatirim_miktari[1]\n        if len(yatirim_miktari) >= 7:\n            self.toplam_yatirim = \"₺\" + yatirim_miktari[6]\n        if len(yatirim_miktari) >= 8:\n            self.toplam_cekim = \"₺\" + yatirim_miktari[7]\n        if len(yatirim_miktari) >= 9:\n            self.toplam_cekim_adedi = yatirim_miktari[8]\n        \n        self.raporu_guncelle()\n\n    def raporu_guncelle(self):\n        # Oynamaya Devam Ediyor mu? ve Açıklama bilgilerini al\n        self.oynamaya_devam = self.oynamaya_devam_var.get()\n        self.aciklama = self.aciklama_entry.get()\n\n        # Raporu oluştur\n        rapor = f\"\"\"\nİsim Soyisim           \t:\t{self.isim_soyisim}\nK. Adı                      \t:\t{self.kullanici_adi}\nTalep Miktarı        \t:\t{self.talep_miktari}\nTalep yöntemi       \t:\t{self.talep_yontemi}\nYatırım Miktarı     \t:\t{self.yatirim_miktari}\nOyun Türü             \t:\t{self.oyun_turu_var.get()}\nArka Bakiye           \t:\t\nOyuna  Devam     \t:\t{self.oynamaya_devam}\n\nT. Yatırım Miktarı\t:\t{self.toplam_yatirim}\nT. Çekim Miktarı\t:\t{self.toplam_cekim}\nT. Çekim Adedi    \t:\t{self.toplam_cekim_adedi}\n\nAçıklama           \t:\t{self.aciklama}\n\"\"\"\n        self.rapor_alani.delete(1.0, tk.END)\n        self.rapor_alani.insert(tk.END, rapor)\n\n    def raporu_kopyala(self):\n        rapor = self.rapor_alani.get(1.0, tk.END)\n        self.root.clipboard_clear()\n        self.root.clipboard_append(rapor)\n        messagebox.showinfo(\"Başarılı\", \"Rapor panoya kopyalandı!\")\n\n    def raporu_temizle(self):\n        # Tüm veri değişkenlerini sıfırla\n        self.isim_soyisim = \"\"\n        self.kullanici_adi = \"\"\n        self.talep_miktari = \"\"\n        self.talep_yontemi = \"\"\n        self.yatirim_miktari = \"\"\n        self.toplam_yatirim = \"\"\n        self.toplam_cekim = \"\"\n        self.toplam_cekim_adedi = \"\"\n        self.oyun_turu = \"Spor\"\n        self.oynamaya_devam = \"Etmiyor\"\n        self.aciklama = \"\"\n\n        # Arayüzü temizle\n        self.rapor_alani.delete(1.0, tk.END)\n        self.aciklama_entry.delete(0, tk.END)\n        self.oynamaya_devam_var.set(\"Etmiyor\")\n        self.oyun_turu_var.set(\"Spor\")\n\n        messagebox.showinfo(\"Başarılı\", \"Rapor temizlendi, yeni rapor hazırlanabilir!\")\n\nif __name__ == \"__main__\":\n    root = tk.Tk()\n    app = RaporOlusturucu(root)\n    root.mainloop()"
    },
    "windsurf-diagnostics": {
      "title": "windsurf-diagnostics",
      "content": "{\n  \"systemInfo\": {\n    \"operatingSystem\": \"win32\",\n    \"windsurfVersion\": \"1.2.6\",\n    \"userEmail\": \"rigazinga@gmail.com\",\n    \"timestamp\": \"2025-02-11T01:53:39.453Z\",\n    \"installationId\": \"82f36389-2083-4f21-b423-c732a0c88b0f\"\n  },\n  \"userSettings\": {\n    \"openMostRecentChatConversation\": true,\n    \"lastSelectedModel\": \"MODEL_UNSPECIFIED\",\n    \"themePreference\": \"THEME_PREFERENCE_UNSPECIFIED\",\n    \"extensionPanelTab\": \"EXTENSION_PANEL_TAB_UNSPECIFIED\",\n    \"fontSize\": \"FONT_SIZE_DEFAULT\",\n    \"autocompleteSpeed\": \"AUTOCOMPLETE_SPEED_DEFAULT\",\n    \"rememberLastModelSelection\": \"REMEMBER_LAST_MODEL_SELECTION_ENABLED\",\n    \"lastSelectedModelName\": \"\",\n    \"lastSelectedCascadeModel\": \"MODEL_CLAUDE_3_5_SONNET_20241022\",\n    \"cascadeNuxStates\": [\n      {\n        \"event\": \"CASCADE_NUX_EVENT_DIFF_OVERVIEW\"\n      }\n    ],\n    \"cascadePlannerMode\": \"CONVERSATIONAL_PLANNER_MODE_NO_TOOL\",\n    \"cascadeAllowedCommands\": [],\n    \"cascadeDeniedCommands\": [],\n    \"userNuxStates\": [],\n    \"cascadeWebSearchDisabled\": false,\n    \"disableAutocomplete\": false,\n    \"disableSupercomplete\": false,\n    \"disableSelectionPopup\": false,\n    \"disableExplainProblemInlayHint\": false,\n    \"disableInlayHintShortcuts\": false,\n    \"disableOpenCascadeOnReload\": false,\n    \"disableAutoOpenEditedFiles\": false,\n    \"disableTabToJump\": false,\n    \"cascadeAutoExecutionPolicy\": \"CASCADE_COMMANDS_AUTO_EXECUTION_OFF\"\n  },\n  \"extensionLogs\": [\n    \"2025-02-11 04:52:23.532 [info] 2025/02/11 04:52:23 maxprocs: Leaving GOMAXPROCS=8: CPU quota undefined\",\n    \"2025-02-11 04:52:23.836 [info] I0211 04:52:23.834606 15812 main.go:574] Setting GOMAXPROCS to 8\",\n    \"2025-02-11 04:52:23.847 [info] I0211 04:52:23.846651 15812 main.go:787] Starting language server process with pid 15812\",\n    \"2025-02-11 04:52:23.847 [info] I0211 04:52:23.846651 15812 server.go:224] Language server will attempt to listen on host 127.0.0.1\",\n    \"2025-02-11 04:52:23.849 [info] I0211 04:52:23.848558 15812 server.go:231] Language server listening on random port at 49850\",\n    \"2025-02-11 04:52:25.451 [info] I0211 04:52:25.450742 15812 server.go:307] Created extension server client at port 49848\",\n    \"2025-02-11 04:52:30.556 [info] I0211 04:52:30.555309 15812 server.go:780] Local search is enabled, will index local files.\",\n    \"2025-02-11 04:52:30.556 [info] I0211 04:52:30.555825 15812 server.go:784] Using 2 indexer workers\",\n    \"2025-02-11 04:52:30.612 [info] (Windsurf) 2025-02-11 04:52:30.607 [INFO]: Language server started\",\n    \"2025-02-11 04:52:30.816 [info] (Windsurf) 2025-02-11 04:52:30.814 [INFO]: LS lspClient started successfully\"\n  ],\n  \"languageServerDiagnostics\": {\n    \"logs\": [\n      \"I0211 04:52:23.834606 15812 main.go:574] Setting GOMAXPROCS to 8\\n\",\n      \"I0211 04:52:23.846651 15812 main.go:787] Starting language server process with pid 15812\\n\",\n      \"I0211 04:52:23.846651 15812 server.go:224] Language server will attempt to listen on host 127.0.0.1\\n\",\n      \"I0211 04:52:23.848558 15812 server.go:231] Language server listening on random port at 49850\\n\",\n      \"I0211 04:52:25.450742 15812 server.go:307] Created extension server client at port 49848\\n\",\n      \"I0211 04:52:30.555309 15812 server.go:780] Local search is enabled, will index local files.\\n\",\n      \"I0211 04:52:30.555825 15812 server.go:784] Using 2 indexer workers\\n\"\n    ]\n  },\n  \"recentTrajectories\": [\n    {\n      \"cascadeId\": \"e97667c3-0afa-4dff-bd69-8f4b0a28cd3a\",\n      \"trajectoryId\": \"20ac6e97-5a8a-4af3-81e5-b6f489775ef9\",\n      \"summary\": \"edit modunda mısın\",\n      \"lastStepIndex\": 26,\n      \"lastModifiedTime\": \"2025-02-11T01:50:40.333Z\"\n    },\n    {\n      \"cascadeId\": \"7e3827bd-26f9-4cdf-907d-128651d2e956\",\n      \"trajectoryId\": \"346bc332-b2ed-446b-8b53-762f923dcf1a\",\n      \"summary\": \"Reviving Previous Coding Discussion  \",\n      \"lastStepIndex\": 20,\n      \"lastModifiedTime\": \"2025-02-11T01:37:13.587Z\"\n    },\n    {\n      \"cascadeId\": \"9ab04d96-e93c-4871-bbda-4bde1b248fd7\",\n      \"trajectoryId\": \"fdae280a-57dd-42c2-a53f-07505791429c\",\n      \"summary\": \"Coding Assistance and Debugging  \",\n      \"lastStepIndex\": 16,\n      \"lastModifiedTime\": \"2025-02-11T01:04:05.193Z\"\n    },\n    {\n      \"cascadeId\": \"cb340965-4537-4242-9ee4-0145fede4ca1\",\n      \"trajectoryId\": \"ad373482-370a-4cbd-945f-30c07abc7a1d\",\n      \"summary\": \"Integrating Cevrim Hesapla Feature  \",\n      \"lastStepIndex\": 60,\n      \"lastModifiedTime\": \"2025-02-09T03:16:34.214Z\"\n    },\n    {\n      \"cascadeId\": \"86c03a36-f542-4b52-926b-6e928eb20a44\",\n      \"trajectoryId\": \"cd110702-2439-40f4-9035-0807c2f759b6\",\n      \"summary\": \"Kodlama Yardımı İsteme  \",\n      \"lastStepIndex\": 26,\n      \"lastModifiedTime\": \"2025-02-08T20:40:51.426Z\"\n    },\n    {\n      \"cascadeId\": \"15bc3aec-4ab3-44fc-8649-437a98e221d8\",\n      \"trajectoryId\": \"e4b4015d-21b2-4526-b27d-8234ed53d26c\",\n      \"summary\": \"Reviewing Python Program Functions  \",\n      \"lastStepIndex\": 22,\n      \"lastModifiedTime\": \"2025-02-08T20:24:26.094Z\"\n    },\n    {\n      \"cascadeId\": \"ef77fd25-625c-41b1-a275-7657eab3d0c3\",\n      \"trajectoryId\": \"731a3bce-b4eb-4d2a-b522-976a80910a6e\",\n      \"summary\": \"Creating a New Plugin  \",\n      \"lastStepIndex\": 31,\n      \"lastModifiedTime\": \"2025-02-08T19:47:25.742Z\"\n    },\n    {\n      \"cascadeId\": \"456c03ce-ec48-4b65-b4be-8487c20414a2\",\n      \"trajectoryId\": \"c7369da6-f2cc-40fa-bca6-47c709bbe3fc\",\n      \"summary\": \"Improving IBAN Validation Logic  \",\n      \"lastStepIndex\": 172,\n      \"lastModifiedTime\": \"2025-02-08T15:21:27.416Z\"\n    },\n    {\n      \"cascadeId\": \"1c4866bd-08f9-451d-bfe7-7430da1daf21\",\n      \"trajectoryId\": \"995e6931-836b-42ea-a1c9-cd0b70fcc8d7\",\n      \"summary\": \"Enhancing KYC Application Interface  \",\n      \"lastStepIndex\": 243,\n      \"lastModifiedTime\": \"2025-02-08T13:22:55.205Z\"\n    },\n    {\n      \"cascadeId\": \"45c78086-96fe-4bac-b6e3-e00d82197668\",\n      \"trajectoryId\": \"52cd8df6-948d-4d17-a3ca-7068a889097a\",\n      \"summary\": \"Running Programs on Desktop  \",\n      \"lastStepIndex\": 23,\n      \"lastModifiedTime\": \"2025-02-07T20:16:57.459Z\"\n    }\n  ],\n  \"cascadeId\": \"e97667c3-0afa-4dff-bd69-8f4b0a28cd3a\",\n  \"currentLatestStepIndex\": 26,\n  \"trajectoryId\": \"20ac6e97-5a8a-4af3-81e5-b6f489775ef9\",\n  \"consoleLogs\": [\n    \"[ERROR] 2025-2-11 4:52:32.872 Failed to fetch allowed models: ConnectError: [unknown] unimplemented: 404 Not Found\"\n  ]\n}"
    },
    "ne alaka aq": {
      "title": "ne alaka aq",
      "content": "arapaşı"
    }
  },
  "last_updated": "2025-02-12T07:36:42.387860"
}